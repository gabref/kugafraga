// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AirportAdded extends ethereum.Event {
  get params(): AirportAdded__Params {
    return new AirportAdded__Params(this);
  }
}

export class AirportAdded__Params {
  _event: AirportAdded;

  constructor(event: AirportAdded) {
    this._event = event;
  }

  get airportCode(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class AirportRemoved extends ethereum.Event {
  get params(): AirportRemoved__Params {
    return new AirportRemoved__Params(this);
  }
}

export class AirportRemoved__Params {
  _event: AirportRemoved;

  constructor(event: AirportRemoved) {
    this._event = event;
  }

  get airportCode(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class TokenCreated extends ethereum.Event {
  get params(): TokenCreated__Params {
    return new TokenCreated__Params(this);
  }
}

export class TokenCreated__Params {
  _event: TokenCreated;

  constructor(event: TokenCreated) {
    this._event = event;
  }

  get _tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _ownerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenStateUpdated extends ethereum.Event {
  get params(): TokenStateUpdated__Params {
    return new TokenStateUpdated__Params(this);
  }
}

export class TokenStateUpdated__Params {
  _event: TokenStateUpdated;

  constructor(event: TokenStateUpdated) {
    this._event = event;
  }

  get _newState(): string {
    return this._event.parameters[0].value.toString();
  }

  get _location(): string {
    return this._event.parameters[1].value.toString();
  }

  get _employee(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AirportsManager__airports_dictResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getAirportAddress(): Address {
    return this.value0;
  }

  getBalance(): BigInt {
    return this.value1;
  }

  getMargin(): BigInt {
    return this.value2;
  }
}

export class AirportsManager__checkpoints_dictResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getState(): string {
    return this.value0;
  }

  getAirportCode(): string {
    return this.value1;
  }
}

export class AirportsManager extends ethereum.SmartContract {
  static bind(address: Address): AirportsManager {
    return new AirportsManager("AirportsManager", address);
  }

  airports(param0: BigInt): string {
    let result = super.call("airports", "airports(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_airports(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("airports", "airports(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  airports_dict(param0: string): AirportsManager__airports_dictResult {
    let result = super.call(
      "airports_dict",
      "airports_dict(string):(address,uint256,uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return new AirportsManager__airports_dictResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_airports_dict(
    param0: string
  ): ethereum.CallResult<AirportsManager__airports_dictResult> {
    let result = super.tryCall(
      "airports_dict",
      "airports_dict(string):(address,uint256,uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AirportsManager__airports_dictResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  checkpoints_dict(param0: Address): AirportsManager__checkpoints_dictResult {
    let result = super.call(
      "checkpoints_dict",
      "checkpoints_dict(address):(string,string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new AirportsManager__checkpoints_dictResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_checkpoints_dict(
    param0: Address
  ): ethereum.CallResult<AirportsManager__checkpoints_dictResult> {
    let result = super.tryCall(
      "checkpoints_dict",
      "checkpoints_dict(address):(string,string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AirportsManager__checkpoints_dictResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }

  factoryAddress(): Address {
    let result = super.call("factoryAddress", "factoryAddress():(address)", []);

    return result[0].toAddress();
  }

  try_factoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "factoryAddress",
      "factoryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  retrieveAirports(): Array<string> {
    let result = super.call(
      "retrieveAirports",
      "retrieveAirports():(string[])",
      []
    );

    return result[0].toStringArray();
  }

  try_retrieveAirports(): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "retrieveAirports",
      "retrieveAirports():(string[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  retrieveFactoryAddress(): Address {
    let result = super.call(
      "retrieveFactoryAddress",
      "retrieveFactoryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_retrieveFactoryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "retrieveFactoryAddress",
      "retrieveFactoryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factoryAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAirportCall extends ethereum.Call {
  get inputs(): AddAirportCall__Inputs {
    return new AddAirportCall__Inputs(this);
  }

  get outputs(): AddAirportCall__Outputs {
    return new AddAirportCall__Outputs(this);
  }
}

export class AddAirportCall__Inputs {
  _call: AddAirportCall;

  constructor(call: AddAirportCall) {
    this._call = call;
  }

  get _airportAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _airportCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _percentage(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddAirportCall__Outputs {
  _call: AddAirportCall;

  constructor(call: AddAirportCall) {
    this._call = call;
  }
}

export class CreateTokenCall extends ethereum.Call {
  get inputs(): CreateTokenCall__Inputs {
    return new CreateTokenCall__Inputs(this);
  }

  get outputs(): CreateTokenCall__Outputs {
    return new CreateTokenCall__Outputs(this);
  }
}

export class CreateTokenCall__Inputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }

  get _tokenOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _route(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class CreateTokenCall__Outputs {
  _call: CreateTokenCall;

  constructor(call: CreateTokenCall) {
    this._call = call;
  }
}

export class PayBackDebtCall extends ethereum.Call {
  get inputs(): PayBackDebtCall__Inputs {
    return new PayBackDebtCall__Inputs(this);
  }

  get outputs(): PayBackDebtCall__Outputs {
    return new PayBackDebtCall__Outputs(this);
  }
}

export class PayBackDebtCall__Inputs {
  _call: PayBackDebtCall;

  constructor(call: PayBackDebtCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PayBackDebtCall__Outputs {
  _call: PayBackDebtCall;

  constructor(call: PayBackDebtCall) {
    this._call = call;
  }
}

export class RemoveAirportCall extends ethereum.Call {
  get inputs(): RemoveAirportCall__Inputs {
    return new RemoveAirportCall__Inputs(this);
  }

  get outputs(): RemoveAirportCall__Outputs {
    return new RemoveAirportCall__Outputs(this);
  }
}

export class RemoveAirportCall__Inputs {
  _call: RemoveAirportCall;

  constructor(call: RemoveAirportCall) {
    this._call = call;
  }

  get _airportCode(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RemoveAirportCall__Outputs {
  _call: RemoveAirportCall;

  constructor(call: RemoveAirportCall) {
    this._call = call;
  }
}

export class UpdateTokenStateCall extends ethereum.Call {
  get inputs(): UpdateTokenStateCall__Inputs {
    return new UpdateTokenStateCall__Inputs(this);
  }

  get outputs(): UpdateTokenStateCall__Outputs {
    return new UpdateTokenStateCall__Outputs(this);
  }
}

export class UpdateTokenStateCall__Inputs {
  _call: UpdateTokenStateCall;

  constructor(call: UpdateTokenStateCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTokenStateCall__Outputs {
  _call: UpdateTokenStateCall;

  constructor(call: UpdateTokenStateCall) {
    this._call = call;
  }
}
